#!/bin/bash
set -euo pipefail

# Enhanced Environment Configuration Script
# This script generates env_config.dart with dynamic environment variables when available
# and falls back to static values when they're not

log() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] [ENHANCED_ENV] $1" >&2; }

log "üöÄ Starting enhanced environment configuration generation..."

# Create the directory if it doesn't exist
mkdir -p lib/config

# Backup existing file if it exists
if [ -f "lib/config/env_config.dart" ]; then
    cp lib/config/env_config.dart lib/config/env_config.dart.backup.$(date +%Y%m%d_%H%M%S)
    log "üìã Backed up existing env_config.dart"
fi

# Function to safely get environment variable with fallback
safe_env() {
    local var_name="$1"
    local fallback="$2"
    local value="${!var_name:-$fallback}"
    echo "$value"
}

# Function to safely get boolean environment variable
safe_bool() {
    local var_name="$1"
    local fallback="$2"
    local value="${!var_name:-$fallback}"
    if [[ "$value" == "true" || "$value" == "1" ]]; then
        echo "true"
    else
        echo "false"
    fi
}

# Function to safely get integer environment variable
safe_int() {
    local var_name="$1"
    local fallback="$2"
    local value="${!var_name:-$fallback}"
    if [[ "$value" =~ ^[0-9]+$ ]]; then
        echo "$value"
    else
        echo "$fallback"
    fi
}

# Function to safely get double environment variable
safe_double() {
    local var_name="$1"
    local fallback="$2"
    local value="${!var_name:-$fallback}"
    if [[ "$value" =~ ^[0-9]+\.?[0-9]*$ ]]; then
        echo "$value"
    else
        echo "$fallback"
    fi
}

log "üìù Generating enhanced environment configuration..."

# Generate the env_config.dart file with dynamic values
cat > lib/config/env_config.dart <<EOF
// GENERATED FILE: DO NOT EDIT
//
// This file is generated by lib/scripts/utils/enhanced_env_config.sh
// It contains all environment-specific variables for the app.

class EnvConfig {
  // App Metadata
  static const String appId = "$(safe_env "APP_ID" "")";
  static const String versionName = "$(safe_env "VERSION_NAME" "1.0.0")";
  static const int versionCode = $(safe_int "VERSION_CODE" "1");
  static const String appName = "$(safe_env "APP_NAME" "QuikApp")";
  static const String orgName = "$(safe_env "ORG_NAME" "")";
  static const String webUrl = "$(safe_env "WEB_URL" "")";
  static const String userName = "$(safe_env "USER_NAME" "")";
  static const String emailId = "$(safe_env "EMAIL_ID" "")";
  static const String branch = "$(safe_env "BRANCH" "main")";
  static const String workflowId = "$(safe_env "WORKFLOW_ID" "")";

  // Package Identifiers
  static const String pkgName = "$(safe_env "PKG_NAME" "")";
  static const String bundleId = "$(safe_env "BUNDLE_ID" "")";

  // Feature Flags (converted to bool)
  static const bool pushNotify = $(safe_bool "PUSH_NOTIFY" "false");
  static const bool isChatbot = $(safe_bool "IS_CHATBOT" "false");
  static const bool isDomainUrl = $(safe_bool "IS_DOMAIN_URL" "false");
  static const bool isSplash = $(safe_bool "IS_SPLASH" "true");
  static const bool isPulldown = $(safe_bool "IS_PULLDOWN" "true");
  static const bool isBottommenu = $(safe_bool "IS_BOTTOMMENU" "true");
  static const bool isLoadIndicator = $(safe_bool "IS_LOAD_IND" "true");

  // Permissions (converted to bool)
  static const bool isCamera = $(safe_bool "IS_CAMERA" "false");
  static const bool isLocation = $(safe_bool "IS_LOCATION" "false");
  static const bool isMic = $(safe_bool "IS_MIC" "false");
  static const bool isNotification = $(safe_bool "IS_NOTIFICATION" "false");
  static const bool isContact = $(safe_bool "IS_CONTACT" "false");
  static const bool isBiometric = $(safe_bool "IS_BIOMETRIC" "false");
  static const bool isCalendar = $(safe_bool "IS_CALENDAR" "false");
  static const bool isStorage = $(safe_bool "IS_STORAGE" "false");

  // OAuth Authentication
  static const bool isGoogleAuth = $(safe_bool "IS_GOOGLE_AUTH" "false");
  static const bool isAppleAuth = $(safe_bool "IS_APPLE_AUTH" "false");

  // UI/Branding
  static const String logoUrl = "$(safe_env "LOGO_URL" "")";
  static const String splashUrl = "$(safe_env "SPLASH_URL" "")";
  static const String splashBg = "$(safe_env "SPLASH_BG_URL" "")";
  static const String splashBgColor = "$(safe_env "SPLASH_BG_COLOR" "#FFFFFF")";
  static const String splashTagline = "$(safe_env "SPLASH_TAGLINE" "")";
  static const String splashTaglineColor = "$(safe_env "SPLASH_TAGLINE_COLOR" "#000000")";
  static const String splashTaglineFont = "$(safe_env "SPLASH_TAGLINE_FONT" "Roboto")";
  static const String splashTaglineSize = "$(safe_env "SPLASH_TAGLINE_SIZE" "16")";
  static const bool splashTaglineBold = $(safe_bool "SPLASH_TAGLINE_BOLD" "false");
  static const bool splashTaglineItalic = $(safe_bool "SPLASH_TAGLINE_ITALIC" "false");
  static const String splashAnimation = "$(safe_env "SPLASH_ANIMATION" "none")";
  static const int splashDuration = $(safe_int "SPLASH_DURATION" "3");

  // Bottom Menu Configuration
  static const String bottommenuItems = "$(safe_env "BOTTOMMENU_ITEMS" "[]")";
  static const String bottommenuBgColor = "$(safe_env "BOTTOMMENU_BG_COLOR" "#FFFFFF")";
  static const String bottommenuIconColor = "$(safe_env "BOTTOMMENU_ICON_COLOR" "#000000")";
  static const String bottommenuTextColor = "$(safe_env "BOTTOMMENU_TEXT_COLOR" "#000000")";
  static const String bottommenuFont = "$(safe_env "BOTTOMMENU_FONT" "DM Sans")";
  static const double bottommenuFontSize = $(safe_double "BOTTOMMENU_FONT_SIZE" "14.0");
  static const bool bottommenuFontBold = $(safe_bool "BOTTOMMENU_FONT_BOLD" "false");
  static const bool bottommenuFontItalic = $(safe_bool "BOTTOMMENU_FONT_ITALIC" "false");
  static const String bottommenuActiveTabColor = "$(safe_env "BOTTOMMENU_ACTIVE_TAB_COLOR" "#0000FF")";
  static const String bottommenuIconPosition = "$(safe_env "BOTTOMMENU_ICON_POSITION" "top")";
  static const String bottommenuVisibleOn = "$(safe_env "BOTTOMMENU_VISIBLE_ON" "")";

  // Firebase Configuration
  static const String firebaseConfigAndroid = "$(safe_env "FIREBASE_CONFIG_ANDROID" "")";
  static const String firebaseConfigIos = "$(safe_env "FIREBASE_CONFIG_IOS" "")";

  // Android Signing
  static const String keyStoreUrl = "$(safe_env "KEY_STORE_URL" "")";
  static const String cmKeystorePassword = "$(safe_env "CM_KEYSTORE_PASSWORD" "")";
  static const String cmKeyAlias = "$(safe_env "CM_KEY_ALIAS" "")";
  static const String cmKeyPassword = "$(safe_env "CM_KEY_PASSWORD" "")";

  // iOS Signing
  static const String appleTeamId = "$(safe_env "APPLE_TEAM_ID" "")";
  static const String apnsKeyId = "$(safe_env "APNS_KEY_ID" "")";
  static const String apnsAuthKeyUrl = "$(safe_env "APNS_AUTH_KEY_URL" "")";
  static const String certPassword = "$(safe_env "CERT_PASSWORD" "")";
  static const String profileUrl = "$(safe_env "PROFILE_URL" "")";
  static const String certP12Url = "$(safe_env "CERT_P12_URL" "")";
  static const String certCerUrl = "$(safe_env "CERT_CER_URL" "")";
  static const String certKeyUrl = "$(safe_env "CERT_KEY_URL" "")";
  static const String profileType = "$(safe_env "PROFILE_TYPE" "app-store")";
  static const String appStoreConnectKeyIdentifier = "$(safe_env "APP_STORE_CONNECT_KEY_IDENTIFIER" "")";

  // Email Configuration
  static const bool enableEmailNotifications = $(safe_bool "ENABLE_EMAIL_NOTIFICATIONS" "false");
  static const String emailSmtpServer = "$(safe_env "EMAIL_SMTP_SERVER" "")";
  static const int emailSmtpPort = $(safe_int "EMAIL_SMTP_PORT" "587");
  static const String emailSmtpUser = "$(safe_env "EMAIL_SMTP_USER" "")";
  static const String emailSmtpPass = "$(safe_env "EMAIL_SMTP_PASS" "")";

  // Build Environment
  static const String buildId = "$(safe_env "CM_BUILD_ID" "unknown")";
  static const String buildDir = "$(safe_env "CM_BUILD_DIR" "")";
  static const String projectRoot = "$(safe_env "PROJECT_ROOT" "")";
  static const String outputDir = "$(safe_env "OUTPUT_DIR" "output")";

  // Memory and Performance Settings
  static const String gradleOpts = "$(safe_env "GRADLE_OPTS" "")";
  static const int xcodeParallelJobs = $(safe_int "XCODE_PARALLEL_JOBS" "4");
  static const String flutterBuildArgs = "$(safe_env "FLUTTER_BUILD_ARGS" "")";

  // Utility Methods
  static bool get isAndroidBuild => workflowId.startsWith('android');
  static bool get isIosBuild => workflowId.contains('ios');
  static bool get isCombinedBuild => workflowId == 'combined';
  static bool get hasFirebase => firebaseConfigAndroid.isNotEmpty || firebaseConfigIos.isNotEmpty;
  static bool get hasKeystore => keyStoreUrl.isNotEmpty;
  static bool get hasIosSigning => certPassword.isNotEmpty && profileUrl.isNotEmpty;
}
EOF

log "‚úÖ Enhanced environment configuration generated successfully."

# Validate the generated file
if [ -f "lib/config/env_config.dart" ]; then
    log "‚úÖ Environment configuration file created successfully"
    
    # Check if config is valid Dart
    if command -v dart >/dev/null 2>&1; then
        if dart analyze lib/config/env_config.dart >/dev/null 2>&1; then
            log "‚úÖ Generated config passes Dart analysis"
        else
            log "‚ö†Ô∏è  Generated config has Dart analysis issues"
            log "üîç Running detailed Dart analysis..."
            dart analyze lib/config/env_config.dart
            log "üîÑ Falling back to static configuration..."
            ./lib/scripts/utils/force_fix_env_config.sh
        fi
    fi
    
    # Show config summary
    log "üìã Configuration Summary:"
    log "   App: $(safe_env "APP_NAME" "QuikApp") v$(safe_env "VERSION_NAME" "1.0.0")"
    log "   Workflow: $(safe_env "WORKFLOW_ID" "unknown")"
    log "   Firebase: $(safe_bool "PUSH_NOTIFY" "false")"
    log "   Keystore: $([ -n "$(safe_env "KEY_STORE_URL" "")" ] && echo "true" || echo "false")"
    log "   iOS Signing: $([ -n "$(safe_env "CERT_PASSWORD" "")" ] && echo "true" || echo "false")"
    
    # Show first few lines for verification
    log "üîç Generated file preview:"
    head -20 lib/config/env_config.dart | while IFS= read -r line; do
        log "   $line"
    done
    
else
    log "‚ùå Failed to generate environment configuration"
    return 1
fi

log "üéâ Enhanced environment configuration generation completed successfully"
return 0 