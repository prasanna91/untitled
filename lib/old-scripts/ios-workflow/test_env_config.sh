#!/usr/bin/env bash

# Test script for environment configuration generation
# Tests the env_config.dart generation without requiring macOS tools

set -euo pipefail

# Logging functions
log_info() { echo "ℹ️ $1"; }
log_success() { echo "✅ $1"; }
log_error() { echo "❌ $1"; }
log_warning() { echo "⚠️ $1"; }
log() { echo "📌 $1"; }

# Set test environment variables
export BUNDLE_ID="com.test.app"
export APP_NAME="Test App"
export VERSION_NAME="1.0.0"
export VERSION_CODE="1"
export PROJECT_ID="test-project-id"
export APP_ID="12345"
export ORG_NAME="Test Organization"
export WEB_URL="https://test.com"
export USER_NAME="testuser"
export EMAIL_ID="test@example.com"
export BRANCH="main"
export WORKFLOW_ID="ios-workflow"
export PKG_NAME="com.test.app"
export PUSH_NOTIFY="false"
export IS_CHATBOT="false"
export IS_DOMAIN_URL="false"
export IS_SPLASH="true"
export IS_PULLDOWN="true"
export IS_BOTTOMMENU="true"
export IS_LOAD_IND="true"
export IS_CAMERA="false"
export IS_LOCATION="false"
export IS_MIC="false"
export IS_NOTIFICATION="false"
export IS_CONTACT="false"
export IS_BIOMETRIC="false"
export IS_CALENDAR="false"
export IS_STORAGE="false"
export IS_GOOGLE_AUTH="false"
export IS_APPLE_AUTH="false"
export LOGO_URL=""
export SPLASH_URL=""
export SPLASH_BG_URL=""
export SPLASH_BG_COLOR="#FFFFFF"
export SPLASH_TAGLINE=""
export SPLASH_TAGLINE_COLOR="#000000"
export SPLASH_TAGLINE_FONT="Roboto"
export SPLASH_TAGLINE_SIZE="16"
export SPLASH_TAGLINE_BOLD="false"
export SPLASH_TAGLINE_ITALIC="false"
export SPLASH_ANIMATION="none"
export SPLASH_DURATION="3"
export BOTTOMMENU_ITEMS='[{"label":"Home","icon":{"type":"preset","name":"home_outlined"},"url":"https://example.com/"}]'
export BOTTOMMENU_BG_COLOR="#FFFFFF"
export BOTTOMMENU_ICON_COLOR="#000000"
export BOTTOMMENU_TEXT_COLOR="#000000"
export BOTTOMMENU_FONT="DM Sans"
export BOTTOMMENU_FONT_SIZE="14"
export BOTTOMMENU_FONT_BOLD="false"
export BOTTOMMENU_FONT_ITALIC="false"
export BOTTOMMENU_ACTIVE_TAB_COLOR="#0000FF"
export BOTTOMMENU_ICON_POSITION="top"
export BOTTOMMENU_VISIBLE_ON=""
export FIREBASE_CONFIG_ANDROID=""
export FIREBASE_CONFIG_IOS=""
export KEY_STORE_URL=""
export CM_KEYSTORE_PASSWORD=""
export CM_KEY_ALIAS=""
export CM_KEY_PASSWORD=""
export APPLE_TEAM_ID="TEST123"
export APNS_KEY_ID=""
export APNS_AUTH_KEY_URL=""
export CERT_PASSWORD="testpass"
export PROFILE_URL="https://example.com/profile.mobileprovision"
export CERT_P12_URL=""
export CERT_CER_URL=""
export CERT_KEY_URL=""
export PROFILE_TYPE="app-store"
export APP_STORE_CONNECT_KEY_IDENTIFIER=""
export ENABLE_EMAIL_NOTIFICATIONS="false"
export EMAIL_SMTP_SERVER=""
export EMAIL_SMTP_PORT="587"
export EMAIL_SMTP_USER=""
export EMAIL_SMTP_PASS=""
export BUILD_ID="test-build"
export BUILD_DIR=""
export PROJECT_ROOT=""
export OUTPUT_DIR="output"
export GRADLE_OPTS=""
export XCODE_PARALLEL_JOBS="4"
export FLUTTER_BUILD_ARGS=""

# Function to escape strings for Dart
escape_dart_string() {
    local input="$1"
    # Escape backslashes first
    input="${input//\\/\\\\}"
    # Escape quotes
    input="${input//\"/\\\"}"
    # Escape newlines
    input="${input//$'\n'/\\n}"
    # Escape carriage returns
    input="${input//$'\r'/\\r}"
    # Escape tabs
    input="${input//$'\t'/\\t}"
    echo "$input"
}

# Test environment configuration generation
test_env_config_generation() {
    log_info "🧪 Testing environment configuration generation..."
    
    # Create backup
    if [ -f "lib/config/env_config.dart" ]; then
        cp lib/config/env_config.dart lib/config/env_config.dart.backup.test
        log "Backed up existing env_config.dart"
    fi
    
    # Escape problematic variables
    local escaped_bottommenu_items=$(escape_dart_string "${BOTTOMMENU_ITEMS:-[]}")
    local escaped_firebase_android=$(escape_dart_string "${FIREBASE_CONFIG_ANDROID:-}")
    local escaped_firebase_ios=$(escape_dart_string "${FIREBASE_CONFIG_IOS:-}")
    local escaped_cert_cer_url=$(escape_dart_string "${CERT_CER_URL:-}")
    local escaped_cert_key_url=$(escape_dart_string "${CERT_KEY_URL:-}")
    local escaped_key_store_url=$(escape_dart_string "${KEY_STORE_URL:-}")
    local escaped_cm_keystore_password=$(escape_dart_string "${CM_KEYSTORE_PASSWORD:-}")
    local escaped_cm_key_alias=$(escape_dart_string "${CM_KEY_ALIAS:-}")
    local escaped_cm_key_password=$(escape_dart_string "${CM_KEY_PASSWORD:-}")
    local escaped_cert_password=$(escape_dart_string "${CERT_PASSWORD:-}")
    local escaped_profile_url=$(escape_dart_string "${PROFILE_URL:-}")
    local escaped_cert_p12_url=$(escape_dart_string "${CERT_P12_URL:-}")
    local escaped_email_smtp_pass=$(escape_dart_string "${EMAIL_SMTP_PASS:-}")
    
    # Generate env_config.dart
    cat > lib/config/env_config.dart.tmp <<EOF
// GENERATED FILE: DO NOT EDIT
//
// This file is generated by lib/scripts/ios-workflow/test_env_config.sh
// It contains all environment-specific variables for the app.

class EnvConfig {
  // App Metadata
  static const String projectId = "${PROJECT_ID:-}";
  static const String appId = "${APP_ID:-}";
  static const String versionName = "${VERSION_NAME:-1.0.0}";
  static const int versionCode = ${VERSION_CODE:-1};
  static const String appName = "${APP_NAME:-QuikApp}";
  static const String orgName = "${ORG_NAME:-}";
  static const String webUrl = "${WEB_URL:-}";
  static const String userName = "${USER_NAME:-}";
  static const String emailId = "${EMAIL_ID:-}";
  static const String branch = "${BRANCH:-main}";
  static const String workflowId = "${WORKFLOW_ID:-ios-workflow}";

  // Package Identifiers
  static const String pkgName = "${PKG_NAME:-}";
  static const String bundleId = "${BUNDLE_ID:-}";

  // Feature Flags (converted to bool)
  static const bool pushNotify = ${PUSH_NOTIFY:-false};
  static const bool isChatbot = ${IS_CHATBOT:-false};
  static const bool isDomainUrl = ${IS_DOMAIN_URL:-false};
  static const bool isSplash = ${IS_SPLASH:-true};
  static const bool isPulldown = ${IS_PULLDOWN:-true};
  static const bool isBottommenu = ${IS_BOTTOMMENU:-true};
  static const bool isLoadIndicator = ${IS_LOAD_IND:-true};

  // Permissions (converted to bool)
  static const bool isCamera = ${IS_CAMERA:-false};
  static const bool isLocation = ${IS_LOCATION:-false};
  static const bool isMic = ${IS_MIC:-false};
  static const bool isNotification = ${IS_NOTIFICATION:-false};
  static const bool isContact = ${IS_CONTACT:-false};
  static const bool isBiometric = ${IS_BIOMETRIC:-false};
  static const bool isCalendar = ${IS_CALENDAR:-false};
  static const bool isStorage = ${IS_STORAGE:-false};

  // OAuth Authentication
  static const bool isGoogleAuth = ${IS_GOOGLE_AUTH:-false};
  static const bool isAppleAuth = ${IS_APPLE_AUTH:-false};

  // UI/Branding
  static const String logoUrl = "${LOGO_URL:-}";
  static const String splashUrl = "${SPLASH_URL:-}";
  static const String splashBg = "${SPLASH_BG_URL:-}";
  static const String splashBgColor = "${SPLASH_BG_COLOR:-#FFFFFF}";
  static const String splashTagline = "${SPLASH_TAGLINE:-}";
  static const String splashTaglineColor = "${SPLASH_TAGLINE_COLOR:-#000000}";
  static const String splashTaglineFont = "${SPLASH_TAGLINE_FONT:-Roboto}";
  static const String splashTaglineSize = "${SPLASH_TAGLINE_SIZE:-16}";
  static const bool splashTaglineBold = ${SPLASH_TAGLINE_BOLD:-false};
  static const bool splashTaglineItalic = ${SPLASH_TAGLINE_ITALIC:-false};
  static const String splashAnimation = "${SPLASH_ANIMATION:-none}";
  static const int splashDuration = ${SPLASH_DURATION:-3};

  // Bottom Menu Configuration
  static const String bottommenuItems = "$escaped_bottommenu_items";
  static const String bottommenuBgColor = "${BOTTOMMENU_BG_COLOR:-#FFFFFF}";
  static const String bottommenuIconColor = "${BOTTOMMENU_ICON_COLOR:-#000000}";
  static const String bottommenuTextColor = "${BOTTOMMENU_TEXT_COLOR:-#000000}";
  static const String bottommenuFont = "${BOTTOMMENU_FONT:-DM Sans}";
  static const double bottommenuFontSize = ${BOTTOMMENU_FONT_SIZE:-14.0};
  static const bool bottommenuFontBold = ${BOTTOMMENU_FONT_BOLD:-false};
  static const bool bottommenuFontItalic = ${BOTTOMMENU_FONT_ITALIC:-false};
  static const String bottommenuActiveTabColor = "${BOTTOMMENU_ACTIVE_TAB_COLOR:-#0000FF}";
  static const String bottommenuIconPosition = "${BOTTOMMENU_ICON_POSITION:-top}";
  static const String bottommenuVisibleOn = "${BOTTOMMENU_VISIBLE_ON:-}";

  // Firebase Configuration
  static const String firebaseConfigAndroid = "$escaped_firebase_android";
  static const String firebaseConfigIos = "$escaped_firebase_ios";

  // Android Signing
  static const String keyStoreUrl = "$escaped_key_store_url";
  static const String cmKeystorePassword = "$escaped_cm_keystore_password";
  static const String cmKeyAlias = "$escaped_cm_key_alias";
  static const String cmKeyPassword = "$escaped_cm_key_password";

  // iOS Signing
  static const String appleTeamId = "${APPLE_TEAM_ID:-}";
  static const String apnsKeyId = "${APNS_KEY_ID:-}";
  static const String apnsAuthKeyUrl = "${APNS_AUTH_KEY_URL:-}";
  static const String certPassword = "$escaped_cert_password";
  static const String profileUrl = "$escaped_profile_url";
  static const String certP12Url = "$escaped_cert_p12_url";
  static const String certCerUrl = "$escaped_cert_cer_url";
  static const String certKeyUrl = "$escaped_cert_key_url";
  static const String profileType = "${PROFILE_TYPE:-app-store}";
  static const String appStoreConnectKeyIdentifier = "${APP_STORE_CONNECT_KEY_IDENTIFIER:-}";

  // Email Configuration
  static const bool enableEmailNotifications = ${ENABLE_EMAIL_NOTIFICATIONS:-false};
  static const String emailSmtpServer = "${EMAIL_SMTP_SERVER:-}";
  static const int emailSmtpPort = ${EMAIL_SMTP_PORT:-587};
  static const String emailSmtpUser = "${EMAIL_SMTP_USER:-}";
  static const String emailSmtpPass = "$escaped_email_smtp_pass";

  // Build Environment
  static const String buildId = "${BUILD_ID:-unknown}";
  static const String buildDir = "${BUILD_DIR:-}";
  static const String projectRoot = "${PROJECT_ROOT:-}";
  static const String outputDir = "${OUTPUT_DIR:-output}";

  // Memory and Performance Settings
  static const String gradleOpts = "${GRADLE_OPTS:-}";
  static const int xcodeParallelJobs = ${XCODE_PARALLEL_JOBS:-4};
  static const String flutterBuildArgs = "${FLUTTER_BUILD_ARGS:-}";

  // Utility Methods
  static bool get isAndroidBuild => workflowId.startsWith('android');
  static bool get isIosBuild => workflowId.contains('ios');
  static bool get isCombinedBuild => workflowId == 'combined';
  static bool get hasFirebase => firebaseConfigAndroid.isNotEmpty || firebaseConfigIos.isNotEmpty;
  static bool get hasKeystore => keyStoreUrl.isNotEmpty;
  static bool get hasIosSigning => certPassword.isNotEmpty && profileUrl.isNotEmpty;
}
EOF

    # Atomic move to prevent corruption
    mv lib/config/env_config.dart.tmp lib/config/env_config.dart
    
    log_success "Environment configuration file generated"
    
    # Test if the file is valid Dart
    if flutter analyze lib/config/env_config.dart >/dev/null 2>&1; then
        log_success "✅ Environment configuration is valid Dart code"
        return 0
    else
        log_error "❌ Environment configuration has syntax errors"
        flutter analyze lib/config/env_config.dart
        return 1
    fi
}

# Main test execution
main() {
    log_info "🧪 Starting environment configuration test..."
    
    if test_env_config_generation; then
        log_success "🎉 Environment configuration test passed!"
        exit 0
    else
        log_error "❌ Environment configuration test failed!"
        exit 1
    fi
}

# Run main function
main "$@" 